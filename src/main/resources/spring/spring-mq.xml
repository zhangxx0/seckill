<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
           http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:property-placeholder location="classpath:rabbitmq.properties" ignore-unresolvable="true"/>

    <!--启用注解监听消息-->
    <rabbit:annotation-driven/>

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

    <rabbit:connection-factory id="connectionFactory"
        host="${mq.host}"
        username="${mq.username}"
        password="${mq.password}"
        port="${mq.port}"/>

    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" message-converter="jsonMessageConverter"/>

    <rabbit:admin connection-factory="connectionFactory"/>

    <rabbit:queue name="seckillQueue"/>

    <rabbit:direct-exchange name="seckillExchange" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="seckillQueue" key="seckillKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--消息监听容器，配合注解监听消息-->
    <!--<bean id="rabbitListenerContainerFactory" class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
        &lt;!&ndash;&lt;!&ndash;并发消费者数量&ndash;&gt;
        <property name="concurrentConsumers" value="${rabbitmq.concurrentConsumers:3}"/>
        &lt;!&ndash;最大数量&ndash;&gt;
        <property name="maxConcurrentConsumers" value="${rabbitmq.maxConcurrentConsumers:10}"/>
        &lt;!&ndash;消息转换&ndash;&gt;
        <property name="messageConverter" ref="jsonMessageConverter"/>&ndash;&gt;
        &lt;!&ndash;任务线程池
        <property name="taskExecutor">
            <task:executor id="amqpTaskExecutor" pool-size="${rabbitmq.task-executor.pool-size:100}"/>
        </property>&ndash;&gt;
        &lt;!&ndash;手动确认&ndash;&gt;
        <property name="acknowledgeMode" value="MANUAL"/>
    </bean>

    <context:component-scan base-package="org.seckill.rabbitmq"/>-->


    <!-- 配置consumer, 监听的类和queue的对应关系 -->
    <!--定义监听器，当收到消息时会执行里面的配置-->
    <bean id="gmsMessageListener" class="org.seckill.rabbitmq.GmsMessageListener"/>
    <bean id="seckillReceiver" class="org.seckill.rabbitmq.SeckillReceiver"/>

    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual">
        <!--<rabbit:listener ref="gmsMessageListener" method="onMessage" queue-names="seckillQueue"/>-->
        <rabbit:listener ref="seckillReceiver" method="onMessage" queue-names="seckillQueue"/>
    </rabbit:listener-container>

</beans>